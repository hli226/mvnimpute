// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Gibbs_imp
NumericMatrix Gibbs_imp(const NumericMatrix data, const List data_indx, const NumericVector mu_vec, const NumericMatrix cond_param);
RcppExport SEXP _mvnimpute_Gibbs_imp(SEXP dataSEXP, SEXP data_indxSEXP, SEXP mu_vecSEXP, SEXP cond_paramSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const List >::type data_indx(data_indxSEXP);
    Rcpp::traits::input_parameter< const NumericVector >::type mu_vec(mu_vecSEXP);
    Rcpp::traits::input_parameter< const NumericMatrix >::type cond_param(cond_paramSEXP);
    rcpp_result_gen = Rcpp::wrap(Gibbs_imp(data, data_indx, mu_vec, cond_param));
    return rcpp_result_gen;
END_RCPP
}
// param_calc
List param_calc(const List data);
RcppExport SEXP _mvnimpute_param_calc(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const List >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(param_calc(data));
    return rcpp_result_gen;
END_RCPP
}
// single_imputation
NumericMatrix single_imputation(List data);
RcppExport SEXP _mvnimpute_single_imputation(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< List >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(single_imputation(data));
    return rcpp_result_gen;
END_RCPP
}
// SWP
NumericMatrix SWP(const NumericMatrix data, const int swp_indx);
RcppExport SEXP _mvnimpute_SWP(SEXP dataSEXP, SEXP swp_indxSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix >::type data(dataSEXP);
    Rcpp::traits::input_parameter< const int >::type swp_indx(swp_indxSEXP);
    rcpp_result_gen = Rcpp::wrap(SWP(data, swp_indx));
    return rcpp_result_gen;
END_RCPP
}
// cond_param
NumericMatrix cond_param(const NumericMatrix data);
RcppExport SEXP _mvnimpute_cond_param(SEXP dataSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const NumericMatrix >::type data(dataSEXP);
    rcpp_result_gen = Rcpp::wrap(cond_param(data));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mvnimpute_Gibbs_imp", (DL_FUNC) &_mvnimpute_Gibbs_imp, 4},
    {"_mvnimpute_param_calc", (DL_FUNC) &_mvnimpute_param_calc, 1},
    {"_mvnimpute_single_imputation", (DL_FUNC) &_mvnimpute_single_imputation, 1},
    {"_mvnimpute_SWP", (DL_FUNC) &_mvnimpute_SWP, 2},
    {"_mvnimpute_cond_param", (DL_FUNC) &_mvnimpute_cond_param, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mvnimpute(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
